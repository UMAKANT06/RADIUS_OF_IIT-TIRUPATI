/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";

export function Roads(props) {
    const { nodes, materials } = useGLTF("/assets/Roads.glb");
    return (
        <>
            <group {...props} dispose={null} position={[130, 0, 0]} scale={[1, 4, 2]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>
            
            <group {...props} dispose={null} position={[-94, 0, 100]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[-94, 0, -100]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[-94, 0, -300]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[-94, 0, 300]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>


            <group {...props} dispose={null} position={[354, 0, 100]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[354, 0, -100]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[354, 0, 300]} scale={[1, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>

            <group {...props} dispose={null} position={[354, 0, -399]} scale={[1.5, 4, 0.2]} rotation={[0, -Math.PI / 2, 0]}>
                <RigidBody type="fixed">
                    <mesh
                        castShadow
                        receiveShadow
                        geometry={nodes.Plane.geometry}
                        material={materials["Material.001"]}
                    />
                </RigidBody>
            </group>
        </>
    );
}

useGLTF.preload("/assets/Roads.glb");